[build-system]
build-backend = "hatchling.build"
requires = ["hatchling"]

[dependency-groups]
dev = [
  "numpy~=1.26.4",
  "ccrestoration==0.2.2",
  "opencv-python~=4.10.0.84",
  "torch~=2.7.1",
  "torchvision~=0.22.1",
  "pyinstaller~=6.16.0"
]
test = [
  "coverage",
  "pytest",
  "pytest-cov",
  "scikit-image"
]
typing = [
  "pre-commit",
  "mypy",
  "ruff"
]

[project]
authors = [{name = "Tohrusky"}]
classifiers = [
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13"
]
dependencies = [
  "PyYAML",
  "ccrestoration==0.2.2",
  "loguru",
  "pydantic"
]
description = "core library for Final2x"
license = "BSD-3-Clause"
name = "Final2x_core"
readme = "README.md"
requires-python = ">=3.9, <4"
version = "3.2.0"

[project.scripts]
Final2x-core = "Final2x_core.__main__:main"

[project.urls]
Homepage = "https://github.com/EutropicAI/Final2x-core"
Repository = "https://github.com/EutropicAI/Final2x-core"

[tool.coverage.report]
exclude_also = [
  "raise AssertionError",
  "raise NotImplementedError",
  "if __name__ == .__main__.:",
  "if TYPE_CHECKING:",
  "except Exception as e"
]

[tool.coverage.run]
omit = [
  "Final2x_core/__main__.py"
]

[tool.hatch.build.sources]
"Final2x_core" = "Final2x_core"

[tool.hatch.build.targets.sdist]
include = ["Final2x_core"]

[tool.hatch.build.targets.wheel]
include = ["Final2x_core"]

[tool.mypy]
disable_error_code = "attr-defined"
disallow_any_generics = false
disallow_subclassing_any = false
ignore_missing_imports = true
plugins = ["pydantic.mypy"]
strict = true
warn_return_any = false

[tool.ruff]
line-length = 120

[tool.ruff.format]
indent-style = "space"
line-ending = "auto"
quote-style = "double"
skip-magic-trailing-comma = false

[tool.ruff.lint]
extend-ignore = ["B018", "B019", "RUF001", "PGH003", "PGH004", "RUF003", "E402", "RUF002", "B904"]
extend-select = [
  "I",  # isort
  "B",  # flake8-bugbear
  "C4",  # flake8-comprehensions
  "PGH",  # pygrep-hooks
  "RUF",  # ruff
  "W",  # pycodestyle
  "YTT"  # flake8-2020
]
fixable = ["ALL"]

[tool.ruff.lint.isort]
combine-as-imports = true

[tool.ruff.lint.mccabe]
max-complexity = 10

[tool.uv]
default-groups = [
  "dev",
  "test",
  "typing"
]

[[tool.uv.index]]
explicit = true
name = "pytorch-cu128"
url = "https://download.pytorch.org/whl/cu128"

[tool.uv.sources]
torch = [
  {index = "pytorch-cu128", marker = "sys_platform == 'win32'"}
]
torchvision = [
  {index = "pytorch-cu128", marker = "sys_platform == 'win32'"}
]
